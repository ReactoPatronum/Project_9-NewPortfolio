/* eslint-disable @next/next/no-img-element */
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import About from "../components/About";
import Contact from "../components/Contact";
import Header from "../components/Header";
import Main from "../components/Main";
import Projects from "../components/Projects";
import Skills from "../components/Skills";
import { sanityClient } from "../client";
import { Props, _Skills } from "../typings";
import { fetchSkills } from "../utils/fetchSkills";
import Settings from "../components/Settings";
import { useColor } from "../context/ColorContext";
import { BsArrowUpCircleFill } from "react-icons/bs";

const Home: NextPage<{
  response: Props;
  cookies: string;
  fetchedSkills: _Skills[];
}> = ({ response, cookies, fetchedSkills }) => {
  const { color } = useColor();
  const { about, contact, header, main, projects } = response;
  return (
    <div
      className={` ${color} transition-all duration-500 text-white h-screen snap-y snap-mandatory overflow-y-scroll overflow-x-hidden z-0 scrollbar scrollbar-track-gray-400/20 scrollbar-thumb-[#F7AB0A]/80`}
    >
      <Head>
        <title>Emre CV</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header data={header} cookie={cookies?.slice(-2)} />
      <section id="main" className="snap-start">
        <Main data={main} />
      </section>

      <section id="about" className="snap-center">
        <About data={about} />
      </section>

      <section id="skills" className="snap-start">
        <Skills skill={fetchedSkills} />
      </section>

      <section id="projects" className="snap-start">
        <Projects data={projects} />
      </section>

      <section id="contact" className="snap-center">
        <Contact data={contact} />
      </section>

      <Link href="#main">
        <footer className="sticky bottom-5 max-w-fit left-1/2   cursor-pointer ">
          <div className="flex items-center justify-center">
            <BsArrowUpCircleFill className="w-8 h-8 text-gray-600 hover:text-gray-300 transition-all duration-200" />
          </div>
        </footer>
      </Link>
      <Settings />
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const cookies = context.req.headers.cookie;
  const query = cookies
    ? `*[_type=="${cookies?.slice(-2)}"]{...,
      projects{
      ...,
      project[]->
    }
     }
    `
    : `*[_type=="en"]{
      ...,
      projects{
      ...,
      project[]->
    }
     }
    `;

  const res: Props[] = await sanityClient.fetch(query);

  const skills: _Skills[] = await fetchSkills();
  return {
    props: {
      fetchedSkills: skills,
      response: res[0],
      cookies: cookies?.slice(-2) ? cookies : null,
    },
  };
};
